# 비트 연산자

data1 = 1
'''
shift left
0000 0001 (데이터 1)
0000 0010 (1번 Shift Left : 2)
0000 0100 (2번 Shift Left : 4)
0000 1000 (3번 Shift Left : 8)
0001 0000 (4번 Shift Left : 16)
'''
result = data1 << 4
print('{} << 4 = {}'.format(data1, result))

data1 <<= 4 # data1 = data1 << 4
'''
shift right
0001 0000 (데이터 16)
0000 1000 (1번 Shift Right : 8)
0000 0100 (2번 Shift Right : 4)
'''
result = data1 >> 2
print('{} >> 2 = {}'.format(data1, result))

'''
not
0001 0000 (데이터 16)
1110 1111 

1110 1111 이 데이터가 10진수로 얼마지? 그럴려면 2의 보수를 수행해
 0001 0000
+0000 0001
-----------
 0001 0001 (데이터 17)
'''
data1 = 128
result = ~data1
print('~{} = {}'.format(data1, result))

'''
정수는 음수, 0, 양수의 범위를 갖음
정수는 표현을 할 때 unsigned, signed 두 가지가 존재해요
unsigned : 0~양수 범위 표현, 즉 음수 제외
signed : 음수, 0, 양수 표현
1110 1111
unsigned: 239
signed : -17

1byte <-> 8bit 기준으로 표현
0000 0000 ~ 1111 1111( 256개 )
unsigned: 0 ~ 255
signed : -128 ~ 127
0000 0000 ~ 0111 1111 : 0~127
1111 1111 ~ 1000 0000 : -1 ~ -128
부호 비트가 1이면 2의 보수를 취한 결과를 음수 얼마로 본다.
  1111 1111
~ 0000 0000
+ 0000 0001
-------------
  0000 0001

1000 0000
0111 1111

0000 1000 0000
1111 0111 1111

1111 0111 1111 (~)
0000 1000 0000 
0000 0000 0001 (+)
0000 1000 0001
'''
